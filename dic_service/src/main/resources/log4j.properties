# 格式：log4j.rootLogger = [ level ] , appenderName1, appenderName2, …
log4j.rootLogger = DEBUG, console_out
# log4j.rootLogger = DEBUG, console_out, file_out, daily_file_out, html_file_out

#### ConsoleAppender:控制台输出 ####

log4j.appender.console_out = org.apache.log4j.ConsoleAppender
# 输出到控制台
log4j.appender.console_out.Target = System.out
# 指定控制台输出日志级别
log4j.appender.console_out.Threshold = WARN
# 默认值是 true, 表示是否立即输出
log4j.appender.console_out.ImmediateFlush = true
# 设置编码方式
log4j.appender.console_out.Encoding = UTF-8
# 日志输出布局
log4j.appender.console_out.layout = org.apache.log4j.PatternLayout
# 如果日志输出布局为PatternLayout 自定义级别，需要使用ConversionPattern指定输出格式
log4j.appender.console_out.layout.ConversionPattern =[%d{yyyy-MM-dd HH:mm:ss,SSS}]-[%p] -%c -%r -%l.%M(%L) | %m%n

#### FileAppender: 输出到文件 ####

# log4j.appender.file_out = org.apache.log4j.FileAppender 
# # 指定输出文件路径
# log4j.appender.file_out.File = ./log/log4j-FA.log
# # 指定输出日志级别
# log4j.appender.file_out.Threshold = INFO
# # 默认为true,意味着输出方式为追加，反之则为覆盖
# log4j.appender.file_out.Append = true
# # 默认值是 true, 表示是否立即输出
# log4j.appender.file_out.ImmediateFlush = true
# # 设置编码方式
# log4j.appender.file_out.Encoding = UTF-8
# # 日志输出布局
# log4j.appender.file_out.layout = org.apache.log4j.PatternLayout
# # 如果日志输出布局为PatternLayout 自定义级别，需要使用ConversionPattern指定输出格式
# log4j.appender.file_out.layout.ConversionPattern =FA-[framework] [%d{yyyy-MM-dd HH:mm:ss,SSS}]-[%p] -%c -%r -%l.%M(%L) | %m%n

# #### DailyRollingFileAppender: 指定周期输出到新文件 ####

# log4j.appender.daily_file_out = org.apache.log4j.DailyRollingFileAppender 
# # 指定输出文件路径
# log4j.appender.daily_file_out.File = ./log/log4j-DFA.log
# # 指定输出日志级别
# log4j.appender.daily_file_out.Threshold = DEBUG
# # 默认为true,意味着输出方式为追加，反之则为覆盖
# log4j.appender.daily_file_out.Append = true
# # 默认值是 true, 表示是否立即输出
# log4j.appender.daily_file_out.ImmediateFlush = true
# # 设置编码方式
# log4j.appender.daily_file_out.Encoding = UTF-8
# # 指定分隔周期：月，周，天，时，分
# # '.': 每月
# # '.'yyyy-ww: 每周
# # '.'yyyy-MM-dd: 每天
# # '.'yyyy-MM-dd-a: 每天两次
# # '.'yyyy-MM-dd-HH: 每小时
# # '.'yyyy-MM-dd-HH-mm: 每分钟
# log4j.appender.daily_file_out.DatePattern ='.'yyyy-MM-dd-HH-mm
# # 日志输出布局
# log4j.appender.daily_file_out.layout = org.apache.log4j.PatternLayout
# # 如果日志输出布局为PatternLayout 自定义级别，需要使用ConversionPattern指定输出格式
# log4j.appender.daily_file_out.layout.ConversionPattern =DFA-[framework] [%d{yyyy-MM-dd HH:mm:ss,SSS}]-[%p] -%c -%r -%l.%M(%L) | %m%n
